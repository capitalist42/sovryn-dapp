name: Release Frontend build to IPFS

on: 
  workflow_dispatch:
    inputs: 
      require_unpin_previous_builds:
        type: boolean
        description: "Unpin previous builds"

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  upload_build:
    name: Upload Frontend Build To IPFS 
    runs-on: ubuntu-latest
    outputs: 
      commit_short_hash: ${{ steps.commit.outputs.short }}
      cidv0: ${{ steps.upload_frontend_build.outputs.hash }}
      cidv1: ${{ steps.cidv0_to_cidv1.outputs.cidv1 }}    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: REACT_APP_IPFS_BUILD=true yarn build 
      - name: Unpin Previous Frontend Build Content
        uses: ./.github/workflows/pinata_unpin_content
      - name: Upload Frontend Build to IPFS via Pinata
        id: upload_frontend_build
        uses: aquiladev/ipfs-action@master
        with:
          path: apps/frontend/build
          service: pinata
          verbose: true
          key: sovryn-dapp-frontend-build
          pinName: Sovryn DAPP Frontend ${{ steps.commit.outputs.short }}
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}
      - name: CIDv0 to CIDv1
        id: cidv0_to_cidv1
        uses: Uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload_frontend_build.outputs.hash }}
  unpin_previous_builds:
    name: Unpin Previous Builds
    needs: upload_build
    if: ${{ inputs.require_unpin_previous_builds }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@3
      - name: Install Dependencies
        run: yarn install
      - name: Call Pinata API to unpin previous builds
        uses: ./.github/workflows/pinata_unpin_content
        with:
          pinataKey:  ${}
          pinataSecret:
          pinName:
          offset: 1 

  pin_build_cidv1:
    name: Pin Frontend Build CIDv1
    needs: upload_build
    runs-on: ubuntu-latest
    steps:
      - name: Call Pinate API to Pin Frontend Build CIDv1
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.pinata.cloud/pinning/pinByHash'
          method: 'POST'
          bearerToken: ${{ secrets.PINATA_JWT }}
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"hashToPin": "${{ needs.upload_build.outputs.cidv1 }}", "pinataMetadata": { "name": "Sovryn DAPP Frontend ${{ needs.upload_build.outputs.commit_short_hash }}"}}'
 
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: yarn install
      - name: Hello world action step
        uses: ./.github/workflows/helloworld
        id: hello
        with:
          who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"
  create_github_release:
    name: Create Github Release
    needs: upload_build
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release with custom IPFS gateway
        id: create_release_1
        if: ${{ vars.IPFS_GATEWAY_URL }}
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.upload_build.outputs.commit_short_hash }}
          release_name: Sovryn DAPP Frontend Release ${{ needs.upload_build.outputs.commit_short_hash }}
          body: |
            **Sovryn DAPP Mainnet gateways**:
            - CIDv0: ${{ needs.upload_build.outputs.cidv0 }}
            - CIDv1: ${{ needs.upload_build.outputs.cidv1 }}
            - ${{ vars.IPFS_GATEWAY_URL }}/ipfs/${{ needs.upload_build.outputs.cidv1 }}            
            - https://cloudflare-ipfs.com/ipfs/${{ needs.upload_build.outputs.cidv1 }}
            - https://ipfs.io/ipfs/${{ needs.upload_build.outputs.cidv1 }}
            - https://${{ needs.upload_build.outputs.cidv1 }}.ipfs.dweb.link/
            - [ipfs://${{ needs.upload_build.outputs.cidv1 }}/](ipfs://${{ needs.upload_build.outputs.cidv1 }}/)
      - name: Create GitHub Release without custom IPFS gateway
        id: create_release_2
        if: ${{ !vars.IPFS_GATEWAY_URL }}
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.upload_build.outputs.commit_short_hash }}
          release_name: Sovryn DAPP Frontend Release ${{ needs.upload_build.outputs.commit_short_hash }}
          body: |
            **Sovryn DAPP Mainnet gateways**:
            - CIDv0: ${{ needs.upload_build.outputs.cidv0 }}
            - CIDv1: ${{ needs.upload_build.outputs.cidv1 }}
            - https://cloudflare-ipfs.com/ipfs/${{ needs.upload_build.outputs.cidv1 }}
            - https://ipfs.io/ipfs/${{ needs.upload_build.outputs.cidv1 }}
            - https://${{ needs.upload_build.outputs.cidv1 }}.ipfs.dweb.link/
            - [ipfs://${{ needs.upload_build.outputs.cidv1 }}/](ipfs://${{ needs.upload_build.outputs.cidv1 }}/)
